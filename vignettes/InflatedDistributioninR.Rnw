\documentclass[12]{article}
%\VignetteEngine{knitr::knitr} 
%\VignetteIndexEntry{Inflated distributions on the interval [0, 1]}
\usepackage{epsf}
\usepackage{Rd}
\usepackage{amssymb}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{graphicx} 
\usepackage{hyperref}
\usepackage{latexsym}
\usepackage{subfig}
\usepackage{makeidx}
\usepackage{multicol}
\usepackage{enumerate} 
\usepackage{tikz}
\usepackage{lipsum}
\usepackage[framemethod=tikz]{mdframed}
\usepackage{natbib}
\usepackage{color}
\usepackage{rotating} 
\usepackage{appendix} 
\usepackage{ulem}
\usepackage{url}
\usepackage{inconsolata}
\usepackage{array}
\usepackage{marginnote}
\usepackage{subfig}
\usepackage{float}
\usepackage{parskip}
\usetikzlibrary{shapes,arrows}
\usepackage[stable]{footmisc}
\usepackage{dsfont}
\usepackage{longtable}
\usepackage{xspace}
\usepackage{multirow}

\usepackage{mathtools}
\usepackage{mathrsfs}
\usepackage{natbib}
\usepackage[latin1]{inputenc}
\usepackage{ctable}

\renewcommand{\Re}{\mathds{R}}
\renewcommand{\R}{\textnormal{\sffamily\bfseries R}\xspace}

\newcommand{\rsection}[1]{\marginnote{{\small\R code  in \\ section \ref{#1}}}[-1in]}
\newcommand{\rpage}[1]{\marginnote{{\small\R code  on \\ page \pageref{#1}}}[-1in]}
\newcommand{\rfigure}[2][0.35]{\marginnote{{\small Figure \ref{#2}}}[#1 in]}
\newcommand{\NOTE}[1]{\marginnote{\textcolor{red}{#1}}}

\newcommand{\E}{\text{E}}
\newcommand{\V}{\text{Var}}
\newcommand{\SD}{\text{SD}}

\renewcommand{\theenumi}{\arabic{enumi}}
\renewcommand{\theenumii}{\alph{enumii}}
\renewcommand{\theenumiii}{\roman{enumiii}}
\renewcommand{\labelenumii}{(\theenumii)}

\definecolor{darkmagenta}{rgb}{.5,0,.5}

\parindent=0in

\newcommand{\pone}{\mu}
\newcommand{\ptwo}{\sigma}
\newcommand{\pthree}{\nu}
\newcommand{\pfour}{\tau}
\newcommand{\oth}{\text{otherwise}}
\newcommand{\given}{\,|\,}
\newcommand{ \Rzeroone}{$(0,1)$}
\newcommand{\binary}{$\{0,1\}$}
\newcommand{\integers}{$\{0,1,2,\ldots\}$}
\newcommand{\binomintegers}{$\{0,1,\ldots,n\}$}
\newcommand{\greaterthantwo}{$(2,\infty)$}
\newcommand{\comma}{,}   
\newcommand{\grb}[1]{\mbox{\boldmath $#1$}}

\DeclareMathOperator{\tr}{tr}
\DeclareMathOperator{\diag}{diag}
\DeclareMathOperator{\logit}{logit}
\DeclareMathOperator{\Prob}{Prob}

\DeclareMathAlphabet{\mathpzc}{OT1}{pzc}{m}{it}

\hyphenation{Like-lihood} \hyphenation{Jour-nal}
\hyphenation{Sta-sinopoulos Stasi-nopoulos Stasino-poulos Stasinopou-los}
\hyphenation{distri-bution}

\makeindex

\begin{document}

\setlength{\marginparwidth}{2.5cm}


\pagenumbering{arabic}
\title{Inflated distributions on the interval $[0,1]$ \\
            }
\pagenumbering{arabic}
\author{\bf{Mikis Stasinopoulos}, \bf{Marco Enea}, \\
 \bf{ Roberd A. Rigby}, and \bf{Abu Hossain}}

\maketitle

\tableofcontents     


\section{Introduction}


The new \texttt{R} package \code{gamlss.inf} is designed to fit inflated distributions on the interval $[0,1]$ for a response variable.  This allows the fitting of a response variable  with a mixed  (i.e  continuous and discrete) distribution which  is continuous within  the interval $(0, 1)$, with additional point probabilities at either 0 or 1 or both 0 and 1. The \pkg{gamlss} package, \cite{RigbyStasinopoulos05, StasinopoulosRigby07} already provides the inflated beta distributions, $\texttt{BEINF}$, $\texttt{BEINF0}$ and $\texttt{BEINF1}$ which allow the user to fit a beta distribution on $(0,1)$, with extra point probabilities at 0 or 1 or both 0 and 1. The probabilities at the points  0 and 1 may depend on explanatory variables. Since the  beta distribution has 2 parameters, the inflated beta, $\texttt{BEINF}$,  (with the addition of the two probabilities at 0 and 1) has a total of 4 parameters.  In practice, and for complicated data sets, the part  of  the response which lies on $(0,1)$ may need more than 2 distribution parameters to be captured correctly. 

 There are three methods   within   the \pkg{gamlss} packages to  obtain a more flexible distribution on the range $(0,1)$, not including zero or one:
 
 \begin{enumerate}
\item  use a flexible explicit  distribution within the \pkg{gamlss.dist}  package, e.g. $\texttt{GB1}(\mu, \sigma, \nu, \tau)$; see Section \ref{Explicit distributions on (0,1)}
\item  create a  flexible distribution on $(0,1)$ by transforming any continuous distribution with range  $(-\infty,  \infty)$ available in the \code{gamlss.dist} package to range  $(0,1)$, using an inverse logit transformation, through the function \code{gen.family()}; see Section \ref{Logit transform distribution on (0,1)}
   \item  create a flexible distribution on $(0,1)$  by  truncating  any continuous distribution on either  $(-\infty, \infty)$ or $(0 , \infty)$  available in \code{gamlss.dist} to range $(0,1)$,  through the function \code{gen.trun()}; see Section \ref{Truncated distributions on (0,1)}.
\end{enumerate}


The  new \R{} package \pkg{gamlss.inf}  enhances this capability of the \pkg{gamlss} packages in that a distribution on $(0,1)$  (with up to four parameters, obtained from any of the three methods above) can be inflated with probabilities at 0 and/or 1.  The overall distribution can then have up to six parameters. Let $\grb{\mu},\grb{\sigma}, \grb{\nu}, \grb{\tau}$ represent the four parameters of the the distribution defined on $(0,1)$ and ${\grb \xi}_0$ and ${\grb \xi}_1$ be parameters related to the probabilities at 0 and 1. Then the general inflated $[0,1]$ model that the new package \code{gamlss.inf} can fit can be written as:




\begin{align}
Y & \stackrel{\hbox{\tiny{ind}}}{\sim}   \mathcal{D}( \grb{\mu},\grb{\sigma}, \grb{\nu}, \grb{\tau},\grb{\xi}_0, \grb{\xi}_1 ) \nonumber\\
 {\grb \eta}_1&=g_1\left( \grb{\mu} \right)= {\bf X}_{1}\grb{\beta}_{1} + s_{11}({\bf x}_{11})+\ldots+ s_{1J_1}({\bf x}_{1 J_1}) \nonumber\\
 {\grb \eta}_2&=g_2\left( \grb{\sigma} \right)={\bf X}_{2}\grb{\beta}_{2} + s_{21}({\bf x}_{2 1})+\ldots+ s_{2J_2}({\bf x}_{2 J_2}) \label{GAMLSS_Model_1} \\
{\grb \eta}_3&=g_3\left( \grb{\nu} \right)={\bf X}_{3}\grb{\beta}_{3} + s_{31}({\bf x}_{3 1})+\ldots+ s_{3J_3}({\bf x}_{3 J_3})  \nonumber\\
{\grb \eta}_4&=g_4\left( \grb{\tau} \right)={\bf X}_{4}\grb{\beta}_{4} + s_{41}({\bf x}_{4 1})+\ldots+ s_{4J_4}({\bf x}_{4 J_4}) \nonumber \\
{\grb \eta}_5&=g_5\left( \grb{\xi}_0 \right)={\bf X}_{5}\grb{\beta}_{5} + s_{51}({\bf x}_{5 1})+\ldots+ s_{5J_5}({\bf x}_{5 J_5}) \nonumber \\
{\grb \eta}_6&=g_6\left( \grb{\xi}_1 \right)={\bf X}_{6}\grb{\beta}_{6} + s_{61}({\bf x}_{6 1})+\ldots+ s_{6J_6}({\bf x}_{6 J_6}) \nonumber
\end{align}



\noindent
where $\mathcal{D}( \grb{\mu},\grb{\sigma}, \grb{\nu}, \grb{\tau}, {\grb \xi}_0, {\grb \xi}_1) $ is a zero and one inflated distribution of the response variable $Y$, defined on $[0,1]$ including 0 and 1, 
where 
${\bf X}_{k}$  are the design matrices incorporating the linear additive terms in the model, ${\grb \beta}_k$   are the linear coefficient parameters and $s_{kj}({\bf x}_{kj})$ represent  smoothing  functions  for  explanatory variables  ${\bf x}_{kj}$, for $k=1,2,3,4,5,6$ and $j=1,\ldots, J_k$. Note that the quantitative explanatory  variables in the ${\bf X}$'s can be the same or different for the ones defined in the smoothers. The vectors ${\grb \eta}_1$, ${\grb \eta}_2$, ${\grb \eta}_3$, ${\grb \eta}_4$ ${\grb \eta}_5$ and  ${\grb \eta}_6$ are called the \textit{predictors} of the distribution parameters ${\grb \mu}$, ${\grb \sigma}$, ${\grb \nu}$, ${\grb \tau}$, ${\grb \xi}_0$ and ${\grb \xi}_1$ respectively. Models  of the type in equation (\ref{GAMLSS_Model_1}) are discussed in \cite{Hossainetal2016} and  \cite{Hossainetal2016IWSM}.


\section{Distributions on $(0,1)$}
\label{Distributions on (0,1)}

\subsection{Explicit distributions on $ (0,1)$}
\label{Explicit distributions on (0,1)}

Within the \code{gamlss.dist} package there are currently three distributions defined on $(0,1)$,
\begin{enumerate}
  \item  the beta distribution, \code{BE}, with two parameters,
  \item  the logit normal distribution, \code{LOGITNO}, with two parameters and
  \item  the generalised beta type 1 distribution, \code{GB1}, with four parameters.
\end{enumerate}

\subsection{Logit transform distributions on $(0, 1)$ }
\label{Logit transform distribution on (0,1)}

In addition,  any continuous random variable say $Z$ defined on  $(-\infty,\infty)$  can be transformed by the inverse logit transformation $Y=1/(1+\exp(-Z))$  to a random variable Y defined on  $(0, 1)$. For example, if $Z$ is a {\it t}-family distributed variable, i.e.  $Z \sim \code{TF}(\mu,\sigma,\nu)$, and the inverse logit transformation is applied, then  $Y \sim \code{logitTF}(\mu,\sigma,\nu)$, i.e. a logit-{\it t} family distribution on $(0,1)$. 

The following is an example on how to take a \code{gamlss.family} distribution on $(-\infty, \infty)$ and create a corresponding logit distribution defined on $(0,1)$. The gamlss function \code{gen.Family()} of the \pkg{gamlss.dist} package generates the  \code{d} (pdf),  \code{p} (cdf), \code{q} (inverse cdf) and \code{r} (random generation)   functions of the distribution together with the function which can be used for fitting within \pkg{gamlss}. Here first generate a logit-{\it t} distribution and plot the distribution for different values of $\mu$, $\sigma$ and $\nu$. Note that $\mu$, $\sigma$ and $\nu$ are defined on the original \textit{t}-distribution ranges $(-\infty, \infty)$ for $\mu$ and $(0, \infty)$ for $\sigma$ and $\nu$. This implies that $1/\left(1+\exp{(-\mu)}\right)$ is not the mean of the logit distribution, \code{logitTF},  but its median. Also   $\sigma$ and $\nu$ are related to the scale and shape of the distribution. Below we use  \code{gen.Family("TF", type="logit")} to generate a logit-{\it t} distribution and in Figure \ref{fig:logitTFDist} we plot the distribution for different values of $\mu$, $\sigma$ and $\nu$ using the function \code{curve()}.

\rfigure{fig:logitTFDist}
\label{r:logitTFDist}
<<logitTFDist, echo=TRUE, fig.show='hide',fig.path="",  fig.asp=1, message=FALSE>>=
# generate the distribution 
library(gamlss)
gen.Family("TF", type="logit")
# different mu
curve(dlogitTF(x, mu=-5, sigma=1, nu=10), 0,1, ylim=c(0,3), lwd=3, lty=2, col=2)
title("(a)")
curve(dlogitTF(x, mu=-1, sigma=1, nu=10), 0,1, add=TRUE, lwd=3, lty=3, col=3)
curve(dlogitTF(x, mu=0,  sigma=1, nu=10), 0,1, add=TRUE, lwd=3, lty=4, col=4)
curve(dlogitTF(x, mu=1,  sigma=1, nu=10), 0,1, add=TRUE, lwd=3, lty=5, col=5)
curve(dlogitTF(x, mu=5,  sigma=1, nu=10), 0,1, add=TRUE, lwd=3, lty=6, col=6)
legend("top",
       legend=c("mu = -5","mu = -1","mu = 0","mu = 1","mu = 5"),
       lty=2:6, col=2:6, cex=1, lwd=3)
# different sigma
curve(dlogitTF(x, mu=0, sigma=.5, nu=10), 0,1, ylim=c(0,3), lwd=3, lty=2, col=2)
title(("(b)"))
curve(dlogitTF(x, mu=0, sigma=1, nu=10), 0,1, add=TRUE, lwd=3,lty=3, col=3)
curve(dlogitTF(x, mu=0, sigma=2, nu=10), 0,1, add=TRUE, lwd=3,lty=4, col=4)
curve(dlogitTF(x, mu=0, sigma=5, nu=10), 0,1, add=TRUE, lwd=3,lty=5, col=5)
legend("topleft",
       legend=c("sigma = .5","sigma = 1","sigma = 2","sigma = 5"),
       lty=2:5, col=2:5, cex=1, lwd=3)
# different nu
curve(dlogitTF(x, mu=0, sigma=1, nu=1000), 0,1, ylim=c(0,3), lwd=3, lty=2, col=2)
title("(c)")
curve(dlogitTF(x, mu=0, sigma=1, nu=10), 0,1, add=TRUE, lwd=3, lty=3, col=3)
curve(dlogitTF(x, mu=0, sigma=1, nu=5 ), 0,1, add=TRUE, lwd=3,lty=4, col=4)
curve(dlogitTF(x, mu=0, sigma=1, nu=1 ), 0,1, add=TRUE, lwd=3,lty=5, col=5)
legend("top",
       legend=c("nu = 1000","nu = 10","nu = 5","nu = 1"),
       lty=2:5, col=2:5, cex=1, lwd=3)
@
\begin{figure}[!htbp]
\centering
\includegraphics[width=0.49\textwidth]{logitTFDist-1}
\includegraphics[width=0.49\textwidth]{logitTFDist-2}\\
\includegraphics[width=0.49\textwidth]{logitTFDist-3}
\rpage{r:logitTFDist}
\caption{A logit-\textit{t} distribution, $\texttt{logitTF}(\mu, \sigma, \tau)$: (a) with values $\mu= \left(-5,-1,0,1,5\right)$, $\sigma=1$ and $\nu=10$, (b) with values $\mu=0$, $\sigma=\left(0.5, 1,2,5\right)$ and  $\nu=10$ and (c) with values $\mu=0$, $\sigma=1$ and $\nu=\left(1,5,10,1000\right)$.}
\label{fig:logitTFDist}
\end{figure}


Figure \ref{fig:logitTFDist} shows the different shapes the distribution can take.  Panel (a) shows for fixed $\sigma=1$ and $\nu=10$ how the distribution changes for different values of $\mu= \left(-5,-1,0,1,5\right)$. Panel (b) for fixed  $\mu=0$ and  $\nu=10$ varies $\sigma=\left( 0.5, 1,2,5\right)$. Finally panel  (c) fixes   $\mu=0$ and  $\sigma=1$ and varies $\nu=\left( 1, 5, 10, 1000\right)$.


\subsection{Truncated distributions on (0,1)}
\label{Truncated distributions on (0,1)}

Any distribution defined on the real line $(-\infty, \infty)$ can be left truncated at 0 and right truncated at 1 to give a truncated distribution on (0,1) using the function \code{gen.trun()} from the \code{R} package \pkg{gamlss.tr}.


\rfigure{fig:trunSST}
\label{r:trunSST}
<<trunSST, echo=TRUE,fig.show='hide',fig.path="",fig.asp=1,fig.path="",message=FALSE>>=
# generate the distribution 
library(gamlss.tr)
gen.trun(c(0,1),"SST",type="both")
# different mu
curve(dSSTtr(x, mu=.1, sigma=.1, nu=1, tau=10), 0,1, lwd=3, lty=2, col=2)
curve(dSSTtr(x, mu=.5, sigma=.1, nu=1, tau=10), 0,1, lwd=3, lty=3, col=3, add=TRUE)
curve(dSSTtr(x, mu=.9, sigma=.1, nu=1, tau=10), 0,1, lwd=3, lty=4, col=4, add=TRUE)
title("(a)")
legend("top",
       legend=c("mu = .1","mu = .5","mu = .9"),
       lty=2:4, col=2:4, cex=1, lwd=3)
# different sigma
curve(dSSTtr(x, mu=.5, sigma=.1, nu=1, tau=10), 0,1, lwd=3, lty=2, col=2)
curve(dSSTtr(x, mu=.5, sigma=.2, nu=1, tau=10), 0,1, lwd=3, lty=3, col=3, add=TRUE)
curve(dSSTtr(x, mu=.5, sigma=.5, nu=1, tau=10), 0,1, lwd=3, lty=4, col=4, add=TRUE)
title("(b)")
legend("topleft",
       legend=c("sigma = .1","sigma = .2","sigma = .5"),
       lty=2:4, col=2:4, cex=1, lwd=3)
# different nu
curve(dSSTtr(x, mu=.5, sigma=.2, nu=.1, tau=10), 0,1, lwd=3, lty=2, col=2)
curve(dSSTtr(x, mu=.5, sigma=.2, nu=1,  tau=10), 0,1, lwd=3, lty=3, col=3, add=TRUE)
curve(dSSTtr(x, mu=.5, sigma=.2, nu=2,  tau=10), 0,1, lwd=3, lty=4, col=4, add=TRUE)
title("(c)")
legend("topleft",
       legend=c("nu = .1","nu = 2","nu = .5"),
       lty=2:4, col=2:4, cex=1, lwd=3)
# different tau 
curve(dSSTtr(x, mu=.5, sigma=.2, nu=1, tau=3 ), 0,1, lwd=3, lty=2, col=2)
curve(dSSTtr(x, mu=.5, sigma=.2, nu=1, tau=4) , 0,1, lwd=3, lty=3, col=3, add=TRUE)
curve(dSSTtr(x, mu=.5, sigma=.2, nu=1, tau=10), 0,1, lwd=3, lty=4, col=4, add=TRUE)
title("(d)")
legend("topleft",
       legend=c("tau = 3","tau = 4","tau = 10"),
       lty=2:4, col=2:4, cex=1, lwd=3)
@
\begin{figure}[!htbp]
\centering
\includegraphics[width=0.49\textwidth]{trunSST-1}
\includegraphics[width=0.49\textwidth]{trunSST-2}\\
\includegraphics[width=0.49\textwidth]{trunSST-3}
\includegraphics[width=0.49\textwidth]{trunSST-4}
\rpage{r:trunSST}
\caption{A truncated SST  distribution, $\texttt{SSTtr}(\mu, \sigma, \nu, \tau)$: (a) with values $\mu= \left(0.1,0.5,0.9\right)$, $\sigma=0.1$ $\nu=1$ and $\tau=10$, (b) with values $\mu=0.5$, $\sigma=\left(0.1,0.2,0.5\right)$,  $\nu=1$ and $\tau=10$  (c) with values $\mu=0.5$, $\sigma=0.2$, $\nu=\left(0.1,1,2\right)$ and $\tau=10$. (d)  with values $\mu=0.5$, $\sigma=0.2$, $\nu=1$ and $\tau=\left(3,4,10 \right)$}
\label{fig:trunSST}
\end{figure}

 Similarly any distribution defined on  the positive real line $(0,\infty)$  can be right truncated at one to give a truncated distribution on $(0,1)$  using the function \code{gen.trun()}.


\section{Generating inflated distributions on $[0,1]$}
\label{Generating inflated distributions on [0,1]}

Next it is shown how any continuous \code{gamlss.family} distribution defined on $(0,1)$, obtained  by any of the three methods  of Section \ref{Distributions on (0,1)},  can be extended by inflation to range  $[0,1]$ by including point probabilities at 0 and/or 1.

The function \code{gen.Inf0to1()} takes as an argument a \code{gamlss.family} distribution on  $(0,1)$ and generates an inflated version of the distribution with point probabilities at  $0$ and/or $1$. The function has two arguments, \code{family} and \code{type.of.Inflation}. The first specifies a distribution family on $(0,1)$, while the second specifies  the type of inflation. The options are i) \code{"Zero"}, \code{"One"} and \code{"Zero\&One"}.

The resulting mixed continuous-discrete probability (density) function (pdf)  for option \code{"Zero\&One"} is given by:
\begin{eqnarray}
f_Y(y|{\grb \theta}, \xi_0, \xi_1)=\left\{ \begin{array}{ll}
                                 p_0  & \mbox{if $y=0$} \\
(1-p_0-p_1) f_W(y|{\grb \theta}) & \mbox{if $0<y<1$}  \\
p_1  & \mbox{if $y=1$} \\
 \end{array}
\label{pdfDINF7} \right.
\end{eqnarray}
for $0 \leq y \leq 1$, where $f_W(y|{\grb \theta})$ is any probability density function defined on $(0,1)$, i.e. for $0<y<1$, with up to four parameters in ${\grb \theta}^{T}=(\theta_1,\theta_2, \theta_3,\theta_4)$ and $0<p_0<1$, $0<p_1<1$ and $0<p_0+p_1<1$ and where $\xi_0= p_0/p_2$, $\xi_1= p_1/p_2$, where $p_2= 1- p_0-p_1$, so $\xi_0>0$ and $\xi_1>0$. Hence
\begin{gather}
 \left( \begin{array}{c}
p_0 \\ p_1 \end{array} \right) = \left( \begin{array}{c} \frac{\xi_0}{(1+\xi_0+\xi_1)} \\\frac{\xi_1}{(1+\xi_0+\xi_1)}\end{array} \right) 
\label{xisanspis}
\end{gather}
 The default link functions for $\xi_0$ and $\xi_1$  in (\ref{pdfDINF7}) are $\eta_5=\log (\xi_0)$ and $\eta_6=\log (\xi_1)$.

However for option  \code{"Zero"} the pdf is
\begin{eqnarray}
f_Y(y|{\grb \theta}, \xi_0, \xi_1)=\left\{ \begin{array}{ll}
                                 \xi_0  & \mbox{if $y=0$} \\
(1-\xi_0) f_W(y|{\grb \theta}) & \mbox{if $0<y<1$}  \\
 \end{array}
\label{pdfDINF70} \right.
\end{eqnarray}
so in this case $\xi_0= P(Y=0)$.  The default link function for $\xi_0$ in (\ref{pdfDINF70}) is $\eta_5= \log \left[\xi_0 / \left(1-\xi_0  \right) \right].$

Also for option  \code{"One"} the pdf is

\begin{eqnarray}
f_Y(y|{\grb \theta}, \xi_1, \xi_1)=\left\{ \begin{array}{ll}
        (1-\xi_1) f_W(y|{\grb \theta}) & \mbox{if $0<y<1$}  \\
        \xi_1  & \mbox{if $y=1$} \\
 \end{array}
\label{pdfDINF71} \right.
\end{eqnarray}
so in this case $ \xi_1 = P (Y=1)$. The default link function for $\xi_1$ in (\ref{pdfDINF71}) is $\eta_5= \log \left[\xi_1 / \left(1-\xi_1  \right) \right].$

Note that, in the \pkg{gamlss.inf} implementation, ${\grb \theta}$ has at most 4 parameters, ${\grb \theta}^{T} = \left(\mu, \sigma, \nu, \tau \right)$.


In the example below first take the skew {\it t}-family distribution, \code{SST}, and use the \code{gen.Family()} function in the \pkg{gamlss.dist} package to generate the  distribution  \code{logitSST} defined on $(0,1)$.  By using the function \code{gen.Inf0to1()} on the new generated \code{logitSST} distribution, an inflated logitSST distribution, inflated at 0 and 1, is created.
<<>>=
library(gamlss.inf)
gen.Family(family="SST", type="logit")
gen.Inf0to1(family="logitSST",  type.of.Inflation="Zero&One")
@
There are five functions generated here for the $\texttt{logitSST}$ distribution inflated at 0 and 1:
\begin{description}
  \item[\code{dlogitSSTInf0to1}] The pdf of the distribution, \code{d} function.
  \item[\code{plogitSSTInf0to1}] The cdf of the distribution, \code{p} function.
  \item[\code{qlogitSSTInf0to1}] The inverse cdf of the distribution, \code{q} function.
  \item[\code{rlogitSSTInf0to1}] The random generating function of the distribution, \code{r} function.
  \item[\code{plotlogitSSTInf0to1}] The function for plotting the pdf of the distribution.
\end{description}

\section{Plotting inflated distributions on $[0,1]$}
\label{Plotting inflated distributions on [0,1]}

The newly created \code{plotlogitSSTInf0to1()} function can be used to  plot the pdf of the inflated distribution (which is a mixed continuous-discrete distribution). Figure \ref{fig:INFlogitSST} shows the use of the \code{plotlogitSSTInf0to1()} function. The function plots the inflated distribution function including point probabilities at zero and one. Only one plot is allowed per figure.  Figure \ref{fig:INFlogitSST} shows eight different realisations of the distribution for different values of the parameters.



\rfigure{fig:INFlogitSST}
\label{r:INFlogitSST}
<<INFlogitSST, echo=TRUE, fig.show='hide',fig.path="",  fig.asp=1, message=FALSE>>=
plotlogitSSTInf0to1(mu= 1, sigma=1, nu=1, tau=10, xi0=.1, xi1=.2); title("(a)")
plotlogitSSTInf0to1(mu=-1, sigma=1, nu=1, tau=10, xi0=.1, xi1=.2); title("(b)")
plotlogitSSTInf0to1(mu=-1, sigma=2, nu=1, tau=10, xi0=.1, xi1=.2); title("(c)")
plotlogitSSTInf0to1(mu=0,  sigma=2, nu=1, tau=10, xi0=.1, xi1=.2); title("(d)")
plotlogitSSTInf0to1(mu=0,  sigma=1, nu=10,tau=10, xi0=.1, xi1=.2); title("(e)")
plotlogitSSTInf0to1(mu=0,  sigma=1, nu=1, tau=3,  xi0=.1, xi1=.2); title("(f)")
plotlogitSSTInf0to1(mu=0,  sigma=1, nu=2, tau=3,  xi0=.5, xi1=.1); title("(g)")
plotlogitSSTInf0to1(mu=0,  sigma=1, nu=.3,tau=100,xi0=.1, xi1=.5); title("(h)")
@
\begin{figure}[!htbp]
\centering
\includegraphics[height=5cm, width=0.49\textwidth]{INFlogitSST-1}
\includegraphics[height=5cm, width=0.49\textwidth]{INFlogitSST-2}\\
\includegraphics[height=5cm, width=0.49\textwidth]{INFlogitSST-3}
\includegraphics[height=5cm, width=0.49\textwidth]{INFlogitSST-4}\\
\includegraphics[height=5cm, width=0.49\textwidth]{INFlogitSST-5}
\includegraphics[height=5cm, width=0.49\textwidth]{INFlogitSST-6}\\
\includegraphics[height=5cm, width=0.49\textwidth]{INFlogitSST-7}
\includegraphics[height=5cm, width=0.49\textwidth]{INFlogitSST-8}
\rpage{r:INFlogitSST}
\caption{A logit-\texttt{SST} distribution: 
(a) with values $\mu=1$,   $\sigma=1$, $\nu=1$,   $\tau=10$, $\xi_0=0.1$, and  $\xi_1=.2$
(b) with values $\mu=-1$,  $\sigma=1$, $\nu=1$,   $\tau=10$, $\xi_0=0.1$, and  $\xi_1=0.2$
(c) with values $\mu=-1$,  $\sigma=2$, $\nu=1$,   $\tau=10$, $\xi_0=0.1$, and  $\xi_1=0.2$
(d) with values $\mu=0$,   $\sigma=2$, $\nu=1$,   $\tau=10$, $\xi_0=0.1$, and  $\xi_1=0.2$
(e) with values $\mu=0$,   $\sigma=1$, $\nu=10$,  $\tau=10$, $\xi_0=0.1$, and  $\xi_1=0.2$
(f) with values $\mu=0$,   $\sigma=1$, $\nu=1$,   $\tau=3$,  $\xi_0=0.1$, and  $\xi_1=0.2$
(g) with values $\mu=0$,   $\sigma=1$, $\nu=2$,   $\tau=3$,  $\xi_0=0.5$, and  $\xi_1=0.1$
(e) with values $\mu=0$,   $\sigma=1$, $\nu=0.3$, $\tau=100$, $\xi_0=0.1$, and  $\xi_1=0.5$}

\label{fig:INFlogitSST}
\end{figure}

The standard plotting functions of \code{R} can also be used to plot the created mixed distribution as is shown below.
Figure \ref{fig:ALLINFlogitSST} shows how the pdf, cdf, inverse cdf and randomisation functions can be displayed for different values of the distribution parameters.


\rfigure{fig:ALLINFlogitSST}
\label{r:ALLINFlogitSST}
<<ALLINFlogitSST, echo=TRUE, fig.show='hide',fig.path="",  fig.asp=1, message=FALSE>>=
# plotting the pdf -------------------------------
curve(dlogitSSTInf0to1(x, mu=0, sigma=1, nu=.8, tau=10, xi0=.1, xi1=.2), 
      0.001,0.999, ylab="pdf",  main="(a)") 
# getting the probabilities
p0 <- dlogitSSTInf0to1(x=0, mu=0, sigma=1, nu=.8, tau=10, xi0=.1, xi1=.2)
p1 <- dlogitSSTInf0to1(x=1, mu=0, sigma=1, nu=.8, tau=10, xi0=.1, xi1=.2)
points(c(0,1), c(p0,p1), col="blue")
lines(c(0,1), c(p0,p1), col="blue", type="h")
# plotting the cdf -------------------------------
curve(plogitSSTInf0to1(x, mu=0, sigma=1, nu=.8, tau=10, xi0=.1, xi1=.2), 
      0.0001,0.999, ylim=c(0,1), ylab="cdf", main="(b)")
#points(c(0), c(p0), col="blue")
lines(c(0), c(p0), col="blue", type="h")
p1 <- plogitSSTInf0to1(q=.999, mu=0, sigma=1, nu=.8, tau=10, xi0=.1, xi1=.2)
lines(c(1,1),c(p1,1))
# plotting the inverse cdf -----------------------
curve(qlogitSSTInf0to1(x, mu=0, sigma=1, nu=.8, tau=10, xi0=.1, xi1=.2), 
      0.0001,0.999, ylim=c(0,1), ylab="inverse cdf", main="(c)")
# plottind simulated data 
truehist(rlogitSSTInf0to1(1000,mu=0, sigma=1, nu=.8, tau=10, xi0=.1, xi1=.2), 
         main="(d)")
@
\begin{figure}[!htbp]
\centering
\includegraphics[width=0.49\textwidth]{ALLINFlogitSST-1}
\includegraphics[width=0.49\textwidth]{ALLINFlogitSST-2}\\
\includegraphics[width=0.49\textwidth]{ALLINFlogitSST-3}
\includegraphics[width=0.49\textwidth]{ALLINFlogitSST-4}\\
\rpage{r:ALLINFlogitSST}
\caption{The (a) pdf (b) cdf (c) inverse pdf and (d) simulated data from a logit-\texttt{SST} distribution inflated at 0 and 1 with $\mu=0$, $\sigma=1$, $\nu=.8$,  $\tau=10$. $\xi_0=.1$, and  $\xi_1=.2$}
\label{fig:ALLINFlogitSST}
\end{figure}


 Note  that in Figure \ref{fig:ALLINFlogitSST}(a)  the probabilities $p_0$ and $p_1$ at 0 and 1, respectively, are given by equation (\ref{xisanspis}), i.e. $p_0=0.077$ and $p_1=0.154$.

The next section demonstrates how to use the function \code{gamlssInf0to1()} in package \pkg{gamlss.inf} to fit a model which has a response variable on the interval $[0,1]$ including 0 and/or 1.


\section{Fitting a distributions on $[0,1]$ }
\label{Fitting a distributions on [0,1]}

\subsection{The \texttt{gamlssInf0to1()} function}
\label{The gamlssInf0to1() function}

The main function for fitting a model with a response variable Y on the interval $[0,1]$ including 0 and/or 1 is \code{gamlssInf0to1()}. In an inflated distribution the parameters $\mu$, $\sigma$, $\nu$ and $\tau$ are  orthogonal to the parameters $\xi_0$ and $\xi_1$ in the sense that the log-likelihood function can be factorised in two components, one containing  $\mu$, $\sigma$, $\nu$ and $\tau$ and another containing $\xi_0$ and $\xi_1$. This means that the two sets of parameters can be estimated separately.
The  function \code{gamlssInf0to1()} takes advantage of this separation and works as follows:
\begin{itemize}
  \item It picks the argument \code{family}  which defines a \code{gamlss.family} distribution defined on $(0,1)$
  \item It checks the range of the response variable $Y$ and depending on whether the range of the response variable Y is $[0,1)$, $(0,1]$ or $[0,1]$, it creates an appropriate binary or multinomial response variable and it fits an appropriate GAMLSS model.
  \begin{itemize}
  \item for $[0,1)$ it fits a binary logistic model, using the \code{gamlss.family} \code{BI()}, to response $Y_1 = 1 \ (\textrm{if} \ Y=0) + 0  \ (\textrm{if} \  0<Y<1) $
  \item for $(0,1]$ it fits a binary logistic model, using the \code{gamlss.family} \code{BI()}, to response $Y_1 = 1 \ (\textrm{if} \ Y=1) + 0 \ (\textrm{if} \  0<Y<1) $
   \item for $[0,1]$ it fits a three level multinomial model, using the \code{gamlss.family} \code{MN3()} to response $Y_1 = 1 \ (\textrm{if} \ Y=0) + 2 \ (\textrm{if} \ Y=1)+ 3 \ (\textrm{if} \ 0<Y<1) $
   \end{itemize}
 \item Fits a GAMLSS model to  the data cases with Y inside $(0,1)$ using the distribution defined by \code{family}, by weighting out the observations with zero and/or one.
 \item Creates the (normalised randomized) quantile residuals for the whole model
 \item Saves the output as  a \code{gamlssinf0to1} object which is a subclass of a \code{gamlss object}.
\end{itemize}

The idea is that the object  \code{gamlssinf0to1} should behave similar to a \code{gamlss} object. For this purpose the following S3 methods are created.
\begin{enumerate}
  \item \code{fitted.gamlssinf0to1()},
  \item \code{coef.gamlssinf0to1()},
  \item \code{print.gamlssinf0to1()},
  \item \code{deviance.gamlssinf0to1()},
  \item \code{vcov.gamlssinf0to1()},
  \item \code{summary.gamlssinf0to1()},
  \item \code{predict.gamlssinf0to1()},
  \item \code{formula.gamlssinf0to1}.
\end{enumerate}
The above methods are demonstrated in the next sections.

The function \code{gamlssInf0to1()}  has the following arguments:
\begin{description}
  \item[y] the response variable on $[0,1]$ (including values at zero and/or one)
  \item[mu.formula] a model formula for the $\mu$ parameter
  \item[sigma.formula] a model formula for the $\sigma$ parameter
  \item[nu.formula] a model formula for the $\nu$ parameter
  \item[tau.formula] a model formula for the $\tau$ parameter
  \item[xi0.formula] a model formula for the $\xi_0$ parameter which is related to the probability at zero
  \item[xi1.formula] a model formula for the $\xi_1$ parameter which is related to the probability at one
  \item[data] a data frame containing the variables occurring in the formula.
  \item[family] any \code{gamlss()} distribution family defined on $(0,1)$
  \item[weights] a vector of prior weights as in \code{gamlss()}
  \item[trace] logical, if TRUE information on model estimation will be printed during the fitting
  \item[...] for extra arguments which can be passed to \code{gamlss()}.
\end{description}

Since the individual models fitted within the algorithm used in \code{gamlssInf0to1()} are GAMLSS models, the parameter formulae above can take any linear or additive GAMLSS terms inclining smoothers and random effects.

To  demonstrate the use of the \code{gamlssInf0to1()} function, simulated examples are used below. In the examples there are no explanatory variables. That is, in Sections \ref{Fitting a distributions on [0,1)}, \ref{Fitting a distributions on (0,1]} and \ref{Fitting a distributions on [0,1]} below, a response from different inflated distributions on $[0,1)$, $(0,1]$ and $[0,1]$; respectively, is simulated  and then a distribution is fitted to the response variable.


In Section \ref{Fitting a regression model}  we use simulated data with one explanatory variable. 

\subsection{Simulating data}
\label{Simulating data}


To compare the results obtained by the function \code{gamlssInf0to1()} to the ones obtained from standard \code{gamlss()} function, simulate data from the inflated beta distributions \code{BEINF0}, \code{BEINF1}, \code{BEINF} which generate data on $[0,1)$, $(0,1]$ and $[0,1]$ respectively.

<<>>=
library(gamlss)     # loading gamlss package    
library(gamlss.inf) 
# creating  data 
set.seed(324)
 y0 <- rBEINF0(1000, mu=.3, sigma=.3, nu=.15)# p0=0.13
 y1 <- rBEINF1(1000, mu=.3, sigma=.3, nu=.15)# p1=0.13
y01 <- rBEINF(1000, mu=.3, sigma=.3, nu=0.1, tau=0.2) # p0=0.769, p1=0.1538
@

The mixed continuous-discrete probability (density) function of $Y\sim \texttt{BEINF}(\mu, \sigma, \nu, \tau)$ is given by
\begin{eqnarray}
f_Y(y)=\left\{ \begin{array}{ll}
                                 p_0  & \mbox{if $y=0$} \\
(1-p_0-p_1) f_W(y) & \mbox{if $0<y<1$}  \\
p_1  & \mbox{if $y=1$} \\
 \end{array}
\label{pdfBEINF7} \right.
\end{eqnarray}
for $ 0 \leq y \leq 1 $, where $ W \sim BE(\mu,\sigma) $ has a beta distribution with $ 0<\mu<1 $ and $ 0<\sigma<1 $ and $ p_0=\nu/(1+\nu+\tau) $ and $ p_1=\tau/(1+\nu+\tau) $. Hence $ \nu=p_0/p_2 $ and $ \tau=p_1/p_2 $ where $ p_2=1-p_0-p_1 $. Since $ 0<p_0<1 $,  $ 0<p_1<1 $ and $ 0<p_0+p_1<1 $, hence $ \nu>0 $ and $ \tau>0 $. Here $f_W(y)$ is a beta, $\texttt{BE}(\mu, \sigma)$, probability density function  given by
\begin{equation*}
  f_W(y)= \frac{1}{B(\alpha, \beta)} y^{\alpha-1} (1-y)^{\beta-1}
\end{equation*}
for $0 < y < 1$   where $\alpha=\mu(1-\sigma^2)/\sigma^2$ and $\beta=(1-\mu)(1-\sigma^2)/\sigma^2$, with $E(W)=\mu$ and $Var(W)=\sigma^2 \mu (1-\mu)$. Hence   in (\ref{pdfBEINF7}),
\begin{gather*}
 \left( \begin{array}{c}
\alpha \\ \beta \\ p_0 \\ p_1
\end{array} \right) = \left( \begin{array}{c} \frac{\mu(1-\sigma^{2})}{\sigma^{2}}\\ \frac{(1-\mu)(1-\sigma^{2})}{\sigma^{2}} \\ \frac{\nu}{(1+\nu+\tau)} \\ \frac{\tau}{(1+\nu + \tau)}\end{array} \right)
\end{gather*}
Hence
\begin{gather*}
 \left( \begin{array}{c}
\mu \\ \sigma \\ \nu \\ \tau
\end{array} \right) = \left( \begin{array}{c} \alpha(\alpha+\beta)^{-1}\\ (\alpha + \beta +1)^{-1/2} \\ \frac{p_0}{p_2} \\ \frac{p_1}{p_2}\end{array} \right)
\end{gather*}
 The  default predictors are $\eta_1=\log\left[ \mu / \left( 1- \mu \right)\right]$, $\eta_2=\log \left[ \sigma / \left( 1- \sigma \right)\right]$, $\eta_3=\log \left( \nu \right)$ and $\eta_4=\log \left( \tau \right)$.

For $Y \sim \texttt{BEINF}0 (\mu, \sigma, \nu)$ set $\tau=0$ (and hence $p_1=0$) in the above probability (density) function (\ref{pdfBEINF7}). For $Y \sim \texttt{BEINF1} (\mu, \sigma, \nu)$ set $\nu=0$  (and hence $p_0=0$)  and then set $\tau = \nu$ in the above probability (density) function (\ref{pdfBEINF7}).


In all three simulated examples $W$ has a beta distribution with $\mu=0.3$ and $\sigma=0.3$.  For the distribution on  $[0,1)$ the   probability at zero  is $ p_0 =\frac{\nu}{1+\nu}= 0.15/(1+.15)= 0.1304348$.  For the distribution on  $(0,1]$ the   probability at one  is $ p_1=\frac{\nu}{1+\nu}= 0.15/(1+.15)= 0.1304348$.
 For the distribution on  $[0,1]$ the   probability at zero  is $ p_0=\frac{\nu}{1+\nu+\tau}= 0.1/(1+0.1+0.2)= 0.0769231$ while the   probability at one  is $ p_1=\frac{\tau}{1+\nu +\tau}= 0.2/(1+0.1+ 0.2)= 0.1538462$.
 The sample proportions of zeros and ones in the sample are $0.123$ for $[0,1)$, $0.127$ for $(0,1]$  and $(0.07,0.167)$ for $[0,1]$. Next plot the three data sets using \code{histdist()}.



\rfigure{fig:BEINF}
\label{r:BEINF}
<<BEINF,fig.path="",  fig.asp=1, fig.show='hide',fig.path="",  fig.asp=1>>=
library(MASS)
truehist(y0)
truehist(y1)
truehist(y01)
@
\begin{figure}[!htbp]
\centering
\includegraphics[width=0.39\textwidth]{BEINF-1}
\includegraphics[width=0.39\textwidth]{BEINF-2}\\
\includegraphics[width=0.39\textwidth]{BEINF-3}
\rpage{r:BEINF}
\caption{Generated data using inflated beta distribution: 
 with values $\mu=0.3$, $\sigma=0.3$, and  $\nu=0.15$ for the $\texttt{BEINF0}(\mu, \sigma, \nu)$ distribution on $[0,1)$, $\nu=0.15$ for the $\texttt{BEINF1}(\mu, \sigma, \nu)$ distribution on $(0,1]$, and $\nu=0.1$ and $\tau=0.2$ for the $\texttt{BEINF}(\mu, \sigma, \nu, \tau)$ distribution on $[0,1]$. 
}
\label{fig:BEINF}
\end{figure} 

\subsection{Fitting a distributions on $[0,1)$ }
\label{Fitting a distributions on [0,1)} 
 Below an inflated distribution at 0 is fitted using both  \code{gamlss()}  and \code{gamlssInf0to1()} functions. Note that the \code{family} argument in \code{gamlssInf0to1()} takes a \code{gamlss.family} distribution defined on $( 0, 1)$. The \code{trace=TRUE} argument is used in \code{gamlssInf0to1()} to check the convergence of the two different models fitted, one using the \code{BI} family and the other using  the \code{BE}.
<<cache=TRUE>>=
 g0 <- gamlss(y0~1, family=BEINF0)
 t0 <- gamlssInf0to1(y=y0, mu.formula=~1, family=BE, trace=TRUE)
AIC(g0,t0, k=0)
@
Note that the  global deviance of the fitted \code{t0} model, using \code{gamlssInf0to1()},  is obtained by adding the individual deviances from the binomial and the  beta model. The third fitted  parameter in both models, is related to the the probability at zero. The third parameter is called \code{nu} (i.e. $\nu$) in \code{gamlss} but \code{xi0} (i.e. $\xi_0$)  in \code{gamlssInf0to1()}. The coefficients for the  predictor $\eta_3$ for the third parameter are the same for both model as shown below.
<<>>=
coef(g0, "nu")
coef(t0, "xi0")
@
The two fitted coefficients for predictor $\eta_3$ are identical, but the fitted values for $\nu$ and $\xi_0$ are not the same because the parametrization used for the zero inflated distribution using \code{gamlssInf0to1()} is  different from \code{gamlss()} using $\texttt{BEINF0}$. Next only the first element of the fitted values vector for the third parameter is displayed (since all values are identical because we fit a constant model).
<<>>=
fitted(t0, "xi0")[1]
fitted(g0, "nu")[1]
@
The difference in the fitted values of $\xi_0$, (\code{xi0}), and $\nu$, (\code{nu}), above is  due to the way the two models are parametrized, since $\xi_0=p_0$, while  $\nu=p_0/(1-p_0)$.
\code{gamlssInf0to1()} fits a binary distribution model with a \code{logit} link for  the binomial distribution parameter i.e. $\eta_t=\log  \left[\xi_0 / \left(1-\xi_0 \right) \right]$. 
The vector \code{fitted(t0, "xi0")} contains the fitted probabilities at zero. In the above  example predictor  $\eta_t=\hat{\beta_t}= -1.964$ is the \code{coef(t0, "xi0")} so  $\hat{\xi}_0= 1/(1+e^{-\hat{\eta}_t}) = 1/(1+e^{-\hat{\beta}_t})=\hat{p}_0=0.123$.
In \code{gamlss()},  $\nu$ is fitted using a $\log$ link i.e. $\eta_g=\log(\nu)$.  In the above example  $\hat{\eta}_g=\hat{\beta_g}= -1.964$ is the \code{coef(g0, "nu")}, so  $\hat{\nu}=e^{\hat{\eta}_g}=e^{\hat{\beta}_g}=0.1402509$ is the fitted value for $\nu$. In \code{BEINF0}  $\nu$ is  defined as the odds ratio i.e.  $\hat{\nu}=\hat{p}_0/ (1-\hat{p}_0)$   which implies that $\hat{p}_0= \hat{\nu}/(1+\hat{\nu})$ so again $\hat{p}_0=0.123$. This can be confirmed by:
<<>>=
fitted(g0, "nu")[1]/(1+fitted(g0, "nu"))[1]
@
which is the fitted probability of observing zero.
The \code{summary()} function makes it clear that the two models use different link functions for the third parameters $\nu$ or $\xi_0$.
<<>>=
summary(t0)
summary(g0)
@
The variance covariance matrix for the fitted \code{g0} and \code{t0} models can be obtained as follows:
<<>>=
vcov(t0)
vcov(g0)
@
 Note the three columns (and three rows)  in the estimated variance-covariance matrices  above  correspond  to the predictor  parameters  $\eta_{kt}=\beta_{kt}$ for $k=1,2,3$ for $\mu$, $\sigma$ and $\xi_0$  and  $\eta_{kg}=\beta_{kg}$ for $g=1,2,3$ for $\mu$, $\sigma$ and $\nu$, where subscripts $t$ and $g$ indicate models  \code{t0} and \code{g0}; respectively.

 Note that because of the partition of the likelihood function parameters $\mu$ and $\sigma$ are orthogonal to $\nu$ or $\xi_0$. 
 
The residuals for the two models should be identical for the non zero response values. Due to the randomization in the residuals at discrete values of the response variable (zero here), we expect differences between the two models in the residuals when the response is zero. This is demonstrated in the lower part of Figure \ref{fig:RESIDZERO} where  the residuals are plotted against the  observation index. 
\rfigure{fig:RESIDZERO}
\label{r:RESIDZERO}
<<RESIDZERO,fig.path="",  fig.asp=1, fig.show='hide'>>=
plot(resid(t0), pch="+")
points(resid(g0), col="red")
@
\begin{figure}[!htbp]
\centering
\includegraphics[width=0.59\textwidth]{RESIDZERO-1}
\rpage{r:RESIDZERO}
\caption{Superimposed residuals from models \texttt{t0} (+) and \text{g0} (o). Because of the randomization in the residuals of the zero values of the response variable, the values of the residuals in the lower part of the plot are not identical.
}
\label{fig:RESIDZERO}
\end{figure}
Next we will plot the fitted distribution in Figure \ref{fig:FITTEDZERO}. The standard \code{BEINF0} distribution in \pkg{gamlss.dist} has its own plotting function called \code{plotBEINF0()} which can be used here.  For the model fitted with  \code{gamlssInf0to1()} such a function, \code{plotBEInf0()},   is created using the \code{gen.Inf0to1()} function.


\rfigure{fig:FITTEDZERO}
\label{r:FITTEDZERO}
<<FITTEDZERO, fig.show='hide',fig.path="",  fig.asp=1>>=
# generate the beta distribution inflated at 0
gen.Inf0to1("BE", type="Zero")

plotBEINF0(mu=fitted(g0, "mu")[1], sigma=fitted(g0, "sigma")[1],
           nu=fitted(g0, "nu")[1], main="(a)", ylab="density")

plotBEInf0(mu=fitted(t0, "mu")[1], sigma=fitted(t0, "sigma")[1],
           xi0=fitted(t0, "xi0")[1]) ; title("(b)")
@
\begin{figure}[!htbp]
\centering
\includegraphics[width=0.49\textwidth]{FITTEDZERO-1}
\includegraphics[width=0.49\textwidth]{FITTEDZERO-2}
\rpage{r:FITTEDZERO}
\caption{The fitted distribution using (a) \texttt{gamlss()} and  (b) \texttt{gamlssInf0to1()} 
}
\label{fig:FITTEDZERO}
\end{figure}
The fitted distributions are identical.


\subsection{Fitting a distributions on $(0,1]$ }
\label{Fitting a distributions on (0,1]}

Now the data inflated at 1 is analyzed.
<<>>=
 g1 <- gamlss(y1~1, family=BEINF1)
 t1 <- gamlssInf0to1(y=y1, mu.formula=~1, family=BE)
AIC(g1,t1, k=0)
@
The third fitted  parameter in both models, is related to $p_1$ the probability at one. It  is called $\nu$ in \code{gamlss} and $\xi_1$  in \code{gamlssInf0to1()}, where $\xi_1=p_1$ and $\nu=p_1/\left(1-p_1 \right)$. 
<<>>=
coef(g1, "nu")
coef(t1, "xi1")
@
Again the two fitted coefficients  in the predictors $\eta_t= \log \left[\xi_1 / \left(  1- \xi_1\right) \right]= \beta_t$ and  $\eta_g= \log  \left(\nu \right) = \beta_g$ are identical, but the fitted values for $\xi_1$  and $\nu$ are different because of the different link functions.
<<>>=
fitted(t1, "xi1")[1]
fitted(g1, "nu")[1]
@
The vector \code{fitted(t1, "xi1")} contains the fitted probabilities at one. For example let $\hat{\beta}_{t1}$ be the \code{coef(t1, "xi1")} then 
$\hat{\xi}_1= 1/(1+e^{-\hat{\beta}_{t1}})=\hat{p}_1=0.127$.
In \code{gamlss},  $\nu$ is fitted using the $\log$ link.  Let $\hat{\beta}_{g1}$ be the \code{coef(g1, "nu")} so  $\hat{\nu} =e^{\hat{\beta}_{g1}}=0.1454754$. In \code{BEINF1}  $\nu$ is  defined as the odds ratio for example  $\hat{\nu}=\hat{p}_1/ (1-\hat{p}_1)$   which implies that $\hat{p}_1= \hat{\nu}/(1+\hat{\nu})$ so again $\hat{p}_0=0.127$. This can be confirmed by:
<<>>=
fitted(g1, "nu")[1]/(1+fitted(g1, "nu"))[1]
@
which is the fitted probability of observing one.
The \code{summary()} function makes it clear that the two models use different link functions for the third parameters $\nu$ or $\xi_1$.
<<>>=
summary(t1)
summary(g1)
@
The variance covariance matrix for the fitted \code{g1} and \code{t1} models can be obtained as follows:
<<>>=
vcov(t1)
vcov(g1)
@
The fitted distributions can be plotted as follows:

\rfigure{fig:FITTEDONE}
\label{r:FITTEDONE}
<<FITTEDONE, fig.show='hide',fig.path="",  fig.asp=1>>=
# generate the
gen.Inf0to1("BE", type="One")

plotBEINF1(mu=fitted(g1, "mu")[1], sigma=fitted(g1, "sigma")[1],
           nu=fitted(g1, "nu")[1], main="(a)", ylab="density")

plotBEInf1(mu=fitted(t1, "mu")[1], sigma=fitted(t1, "sigma")[1],
           xi1=fitted(t1, "xi1")[1]) ; title("(b)")
@
\begin{figure}[!htbp]
\centering
\includegraphics[width=0.49\textwidth]{FITTEDONE-1}
\includegraphics[width=0.49\textwidth]{FITTEDONE-2}
\rpage{r:FITTEDONE}
\caption{The fitted distribution using (a) \texttt{gamlss()} and  (b) \texttt{gamlssInf0to1()}
}
\label{fig:FITTEDONE}
\end{figure}
The fitted distributions are identical.


\subsection{Fitting a  distributions on $[0,1]$ }
\label{Fitting a distributions on [0,1]}

Now an inflated distribution on 0  and 1 is fitted using both  \code{gamlss()}  and  \code{gamlssInf0to1()} functions
<<>>=
 g01 <- gamlss(y01~1, family=BEINF)
 t01 <- gamlssInf0to1(y=y01, mu.formula=~1, family=BE)
AIC(g01,t01, k=0)
@
Note that in  \code{gamlssInf0to()} it was not needed to specify  that the distribution was on $[0,1]$ because the function detected whether there are any zero and one values in the response variable and acts accordingly. The third and fourth fitted  parameters in both models are related to the probabilities at zero and one. They are called $\nu$ and $\tau$ in \code{gamlss} but $\xi_0$  and $\xi_1$ in \code{gamlssInf0to1()}.
<<>>=
coef(g01, "nu")
coef(t01, "xi0")
coef(g01, "tau")
coef(t01, "xi1")
@
The  fitted coefficients are (almost) identical for $\nu$ and $\xi_0$ and also for $\tau$ and $\xi_1$. Now look at the fitted values.
<<>>=
fitted(t01, "xi0")[1]
fitted(g01, "nu")[1]
fitted(t01, "xi1")[1]
fitted(g01, "tau")[1]
@
Note that contrary to the models with only zero or only one in the response variable, the models on $[0,1]$ use the same parametrization  so the fitted values are identical. In fact here the  parameters are related to the probabilities at zero and one as $$\xi_0 = \nu = \frac{p_0}{(1-p_0- p_1)}$$ and $$\xi_1 = \tau = \frac{p_1}{(1-p_0-p_1)}$$ so $$ p_0 = \frac{\xi_0}{(1+\xi_0+\xi_1)}=\frac{\nu}{(1+\nu+\tau)}$$ and $$ p_1 = \frac{\xi_1}{(1+\xi_0+\xi_1)}=\frac{\tau}{(1+\nu+\tau)}.$$
This can be verified  by:

<<>>=
# probability for y=0
fitted(g01, "nu")[1]/(1+fitted(g01, "nu")+fitted(g01, "tau"))[1]
fitted(t01, "xi0")[1]/(1+fitted(t01, "xi0")+fitted(t01, "xi1"))[1]
# probability for y=1
fitted(g01, "tau")[1]/(1+fitted(g01, "nu")+fitted(g01, "tau"))[1]
fitted(t01, "xi1")[1]/(1+fitted(t01, "xi0")+fitted(t01, "xi1"))[1]
@

The \code{summary()} produces the same results for both models, so only \code{t01} is represented here.
<<>>=
summary(t01)
@
The variance covariance matrix for the fitted \code{g01} and \code{t01} models is for all practical purposes identical.
<<>>=
vcov(t01)
vcov(g01)
@
Because of the randomization of the residuals when the response variable takes values at zero and one,  the residuals differ when the response variable is at those values, as is shown in Figure \ref{fig:RESIDZEROONE} where  the residuals are plotted against the  observation index.
\rfigure{fig:RESIDZEROONE}
\label{r:RESIDZEROONE}
<<RESIDZEROONE,fig.path="",  fig.asp=1, fig.show='hide'>>=
plot(resid(t01), pch="+")
points(resid(g01), col="red")
@
\begin{figure}[!htbp]
\centering
\includegraphics[width=0.59\textwidth]{RESIDZEROONE-1}
\rpage{r:RESIDZEROONE}
\caption{Superimposed residuals form models \texttt{t01} (+) and \text{g01} (o). Because of the randomization the values differ when the response is at zero and one
}
\label{fig:RESIDZEROONE}
\end{figure}
The fitted  distributions are plotted next.
\rfigure{fig:FITTEDZEROONE}
\label{r:FITTEDZEROONE}
<<FITTEDZEROONE, fig.show='hide',fig.path="",  fig.asp=1>>=
# generate the
gen.Inf0to1("BE", type="Zero&One")
plotBEINF(mu=fitted(g01, "mu")[1], sigma=fitted(g01, "sigma")[1],
           nu=fitted(g01, "nu")[1], tau=fitted(g01, "tau")[1],
           main="(a)", ylab="density")
plotBEInf0to1(mu=fitted(t01, "mu")[1], sigma=fitted(t01, "sigma")[1],
            xi0=fitted(t01, "xi0")[1],  xi1=fitted(t01, "xi1")[1])
title("(b)")
@
\begin{figure}[!htbp]
\centering
\includegraphics[width=0.49\textwidth]{FITTEDZEROONE-1}
\includegraphics[width=0.49\textwidth]{FITTEDZEROONE-2}
\rpage{r:FITTEDZEROONE}
\caption{The fitted distribution using (a) \texttt{gamlss()} and  (b) \texttt{gamlssInf0to1()}
}
\label{fig:FITTEDZEROONE}
\end{figure}
The fitted distributions are identical.

\section{Fitting a regression model}
\label{Fitting a regression model}

\subsection{Simulating regression models  on $[0,1]$ }
\label{Simulating regression models  on [0,1]}


 We first generate the values for the explanatory variable $x$  and then create four different functions of $x$ for the parameters  $\mu$, $\sigma$, $\nu$ and $\tau$, respectively, of the beta inflated distributions ($\texttt{BEINF0}$, $\texttt{BEINF1}$ and $\texttt{BEINF}$).  Since we would like the simulated data to look as a real data example, we will simulate from some saved functions from a real data analysis.   
Figure  \ref{fig:SIMULREG} displays those functions. 
\rfigure{fig:SIMULREG}
\label{r:SIMULREG}
<<SIMULREG, fig.show='hide',fig.path="",  fig.asp=1>>=
# generating x ----------
set.seed(3210)
x <- (runif(1000)*4)-2
range(x)
data(sda)
fmu <- splinefun(sda$x, sda$mu)
curve(fmu, -2,2)
fsigma <- splinefun(sda$x, sda$sigma)
curve(fsigma, -2,2)
fnu <- splinefun(sda$x, sda$nu)
curve(fnu, -2,2)
ftau <- splinefun(sda$x, sda$tau)
curve(ftau, -2,2)
@
\begin{figure}[!htbp]
\centering
\includegraphics[height=4cm,width=0.49\textwidth]{SIMULREG-1}
\includegraphics[height=4cm,width=0.49\textwidth]{SIMULREG-2}\\
\includegraphics[height=4cm,width=0.49\textwidth]{SIMULREG-3}
\includegraphics[height=4cm,width=0.49\textwidth]{SIMULREG-4}\\
\rpage{r:SIMULREG}
\caption{Showing the four functions used for the simulation of the data in this section.  From top left to  bottom right we have the functions for $\mu$, $\sigma$, $\nu$ and $\tau$.}
\label{fig:SIMULREG}
\end{figure}
Next we generate three different response variables, \code{y0}, \code{y1} and \code{y01}, from a beta inflated distribution with values defined on $[0,1)$, $(0,1]$ and $[0,1]$ respectively.
Figure \ref{fig:SIMULHIST} shows the three different response variables  $y$ against $x$.
\rfigure{fig:SIMULHIST}
\label{r:SIMULHIST}
<<SIMULHIST, fig.show='hide',fig.path="",  fig.asp=1>>=
# generating x ----------
set.seed(1234)
 y0 <- rBEINF0(1000, mu=fmu(x), sigma=fsigma(x), nu=fnu(x))
 y1 <- rBEINF1(1000, mu=fmu(x), sigma=fsigma(x), nu=ftau(x))
y01 <- rBEINF(1000,  mu=fmu(x), sigma=fsigma(x), nu=fnu(x), tau=ftau(x))
# plotting the y's
plot(x,y0, col="darkgray")
plot(x,y1, col="darkgray")
plot(x,y01, col="darkgray")
@
\begin{figure}[!htbp]
\centering
\includegraphics[width=0.49\textwidth]{SIMULHIST-1}
\includegraphics[width=0.49\textwidth]{SIMULHIST-2}\\
\includegraphics[width=0.49\textwidth]{SIMULHIST-3}
\rpage{r:SIMULREG}
\caption{Showing the response variable against the single explanatory variable  $x$ for the three simulated  data sets from  beta inflated distributions ($\texttt{BEINF0}$, $\texttt{BEINF1}$ and $\texttt{BEINF}$). The response variables are \texttt{y0}, \texttt{y1} and \texttt{y01}, with values defined on $[0,1)$, $(0,1]$ and $[0,1]$, respectively.}
\label{fig:SIMULHIST}
\end{figure}


\subsection{Fitting a regression model on $[0,1)$ }
\label{Fitting a regression model on [0,1)}

We start with the data shown in the top left of Figure \ref{fig:SIMULHIST}.
We will fit a beta inflated at zero distribution using the functions \code{gamlss()}. The \code{gamlss.dist} package has two functions for using the beta inflated at zero distribution: \code{BEINF0} and \code{BEZI}. Their parametrization is slightly different.    The same model will be also fitted using \code{gamlssIng0to1()} function. Since in general the type of relationship existing between the parameters and the explanatory variable is unknown we will use smooth functions for $x$. In the following code we used the P-spline smother implemented in the additive term function \code{pb()}.
<<cache=TRUE>>=
 g0p <- gamlss(y0~pb(x), sigma.fo=~pb(x), nu.fo=~pb(x), family=BEINF0)
g0p1 <- gamlss(y0~pb(x), sigma.fo=~pb(x), nu.fo=~pb(x), family=BEZI)
 t0p <- gamlssInf0to1(y=y0, mu.fo=~pb(x), sigma.fo=~pb(x),
                  xi0.fo=~pb(x), family="BE", trace=TRUE)

AIC(g0p,g0p1, t0p)
summary(t0p)
@
 The three models have similar deviances as we would expect. Do not try to interpret the coefficients and the standard errors of the smoothing functions in the summary table. They are for the linear term in the variable $x$ and are here as a consequence of how the model is fitted within the \code{gamlss()} algorithm. They do not   indicate  the coefficients and the standard errors of the smoothing functions.  To check whether the smoothing  function as a whole is  significant  use the function \code{drop1()}.  In our case, since we are dealing with simulated data,  we can actually plot both the true functions and  the fitted functions against $x$.    Note  that the  fitted values for the parameters $\mu$ and  $\sigma$  are  identical  in both fitted models.   The third fitted distribution  parameter, $\hat{\nu}$ or $\hat{\xi_9}$ is different for the two fitted models.  In model  \code{t0p} the  fitted values of $\xi_0$ are probabilities of being zero  $p_0$, since $\xi_0=p_0$,   while in model \code{g0p} the fitted values for $\nu$ are  odds since $\nu=p_0/\left(1-p_0\right)$.  Figure \ref{fig:BETA0FIT} plots the true and fitted functions (for models \code{g0p} [or \code{t0p}]) for $\mu$, $\sigma$ and $\nu$ [or $\xi_0/(1-\xi_0)$].


\rfigure{fig:BETA0FIT}
\label{r:BETA0FIT}
<<BETA0FIT, fig.show='hide',fig.path="",  fig.asp=1>>=
# mu
curve(fmu, -2,2, main="mu", lwd=3)
lines(fitted(g0p)[order(x)]~x[order(x)], col="red",   lty=2, lwd=3)
lines(fitted(t0p, "mu")[order(x)]~x[order(x)], col="blue",   lty=2, lwd=3)
# sigma
curve(fsigma, -2,2, main="sigma", lwd=3)
lines(fitted(g0p, "sigma")[order(x)]~x[order(x)], col="red",   lty=2, lwd=3)
lines(fitted(t0p, "sigma")[order(x)]~x[order(x)], col="blue",   lty=2, lwd=3)
# nu
curve(fnu, -2,2, main="nu", lwd=3)
lines(fitted(g0p, "nu")[order(x)]~x[order(x)], col="red",   lty=2, lwd=3)
fp <- fitted(t0p, "xi0")
fn <- fp/(1-fp)
lines(fn[order(x)]~x[order(x)], col="blue",   lty=2, lwd=3)
@
\begin{figure}[!htbp]
\centering
\includegraphics[width=0.49\textwidth]{BETA0FIT-1}
\includegraphics[width=0.49\textwidth]{BETA0FIT-2}\\
\includegraphics[width=0.49\textwidth]{BETA0FIT-3}
\rpage{r:BETA0FIT}
\caption{Showing the function from which the data were simulated from together  with the fitted smooth function for $\mu$, $\sigma$ and  $\nu$ [or $\xi_0/(1-\xi_0)$]. The solid black line is the true function. The dashed line is the fitted values from both  models \texttt{g0p} and \texttt{t0p} since they are identical.}
\label{fig:BETA0FIT}
\end{figure}


 Note  that the \code{term.plot()} function is not working for models fitted through the  \code{gamlssInf0to1()} function. The \code{term.plotInf0to1()} can be used instead.  
 Figure \ref{fig:termplotat0} shoes the fitted additive terms using the \code{gamlss} \code{BEINF0} fit on the left and the \code{gamlssInf0to1} fit on the right. 
The plots are identical.
\rfigure{fig:termplotat0}
\label{r:termplotat0}
<<termplotat0, fig.show='hide',fig.path="",  fig.asp=1, eval=FALSE>>=
# generating x ----------
term.plot(g0p);title("gamlss")
term.plotInf0to1(t0p,parameter="mu");title("gamlssInf0to1")
term.plot(g0p, "sigma")
term.plotInf0to1(t0p,parameter="sigma")
term.plot(g0p, "nu")
term.plotInf0to1(t0p,parameter="xi0")
@


\begin{figure}[!htbp]
\centering
\includegraphics[height=5cm,width=0.49\textwidth]{termplotat0-1}
\includegraphics[height=5cm,width=0.49\textwidth]{termplotat0-2}\\
\includegraphics[height=5cm,width=0.49\textwidth]{termplotat0-3}
\includegraphics[height=5cm,width=0.49\textwidth]{termplotat0-4}\\
\includegraphics[height=5cm,width=0.49\textwidth]{termplotat0-5}
\includegraphics[height=5cm,width=0.49\textwidth]{termplotat0-6}
\rpage{r:termplotat0}
\caption{Showing the fitted additive predictors for $\mu$, $\sigma$ and $\nu$ (or $\xi_0$) and their approximate 95\% confidence bands for models fitted using the function \texttt{gamlss()} on the left  and using the function  \texttt{gamlssInf0to1()} on the right.}
\label{fig:termplotat0}
\end{figure}


 Note that diagnostics plots like the residual plot, \code{plot()}, the worm plot, \code{wp()}, and the Q-statistics plot, \code{Q.stats()}, are all working with a \code{gamlssInf0to1} object. Also in the case  in which  only one explanatory variable exists, the function \code{centile.Inf0to1()} can  be used to plot centile curves, see Figure \ref{fig:diagnosticsat0}. 
\rfigure{fig:diagnosticsat0}
\label{r:diagnosticsat0}
<<diagnosticsat0, fig.show='hide',fig.path="",  fig.asp=1>>=
plot(t0p)
wp(t0p)
#par(mar = c(0,1,0,1))
Q.stats(t0p, xvar=x)
#par(mar = c(0,0,1,0))n
centiles.Inf0to1(t0p, xvar=x)
@
\begin{figure}[!htbp]
\centering
\includegraphics[height=5cm,width=0.49\textwidth]{diagnosticsat0-1}
\includegraphics[height=5cm,width=0.49\textwidth]{diagnosticsat0-2}\\
\includegraphics[height=5cm,width=0.49\textwidth]{diagnosticsat0-3}
\includegraphics[height=5cm,width=0.49\textwidth]{diagnosticsat0-4}\\
\rpage{r:diagnosticsat0}
\caption{Showing the diagnostic plots created by  \texttt{plot()},  \texttt{wp()}, and \texttt{Q.stats()}, and  centile curves produced by \texttt{centile.Inf0to1()}.}
\label{fig:diagnosticsat0}
\end{figure}

\subsection{Fitting alternative inflated distributions on $[0,1)$}

\subsubsection{Inflated logit family distributions on $[0,1)$}

The function \code{ gamlssInf0to1()} can be used with a logit transformed zero to one distribution or with a truncated zero to one distribution. 
The following code shows how  an inflated logit transformed zero to one distribution can be fitted:    

<<cache=TRUE>>=
# generate a logit transformed distribution from 0 to 1
gen.Family("SST", "logit")
# fit the model
t0sst <- gamlssInf0to1(y=y0, mu.fo=~pb(x), sigma.fo=~pb(x),
                  xi0.fo=~pb(x), family="logitSST")
@
\subsubsection{Inflated truncated distributions on $[0,1)$}

Here we demonstrate how an inflated truncated zero to one distribution can be fitted.
<<cache=TRUE>>=
# generate a truncated distribution from 0 to 1
library(gamlss.tr)
gen.trun(c(0,1),"SST",type="both")
# fit the model
t0ssttr <- gamlssInf0to1(y=y0, mu.fo=~pb(x), sigma.fo=~pb(x),
                       xi0.fo=~pb(x), family="SSTtr")
GAIC(g0p, t0p, t0sst,t0ssttr )
@

As we would generally expect, since we have generated the data using the beta distribution inflated at 0, the two extra fitted models performed worst according to criterion AIC.

Note that $\texttt{logitSST}(\mu, \sigma, \nu, \tau)$ and  $\texttt{SSTtr}(\mu, \sigma, \nu, \tau)$ distributions have four parameters so their corresponding inflated at 0 distributions have five parameters (including the extra $\xi_0=p_0$). Hence models \code{t0sst} and \code{t0ssttr} above can include models for parameters $\nu$ and $\tau$, e.g, \code{nu.fo=$\sim$pb(x)} and \code{tau.fo=$\sim$pb(x)}, as well  models for $\mu$, $\nu$ and $\xi_0$.

\subsubsection{Generalized  Tobit model distributions on $[0,1)$}

 In  general for a restricted values response variable, that is, having a  distribution with a restricted range,  the Tobit  model (which requires a survival analysis  response variable), can be appropriate. Here we show how this model can be fitted within \code{gamlss}. Note though that for Tobit model the probability at zero  is \textbf{not} modelled independently as a function of explanatory variables  but  is equal to the probability of being censored below zero.  For more details see \cite{Hossainetal2016} and  \cite{Hossainetal2016IWSM}.  Below  we fit  a Tobit  normal and a Tobit \code{SST} model  both left censored at 0 to provide a point probability at 0. 

<<cache=TRUE>>=
library(survival)
y0surv<- Surv(y0, y0!=0, type="left")
# creating the distribution
library(gamlss.cens)
# Gaussian
gen.cens("NO", type="left")
# SST distribution
gen.cens("SST", type="left")
# fitting the  model
# Tobit model
s0no <- gamlss( y0surv ~ pb(x), sigma.formula=~pb(x),
               family=NOlc)
# generalized Tobit
s0sst <- gamlss( y0surv ~ pb(x), sigma.formula=~pb(x),
               family=SSTlc)
GAIC(g0p, t0p, t0sst,t0ssttr, s0no, s0sst )
@
Note that the model  fitting for \code{s0sst} has not quite converged.  To obtain convergence use the argument \code{n.cyc} but be warned that it needs 885 iteration to converge.  The Tobit models do not perform as well as the inflated models in this case, which  is not surprising since the data were simulated from a beta inflated distribution, $\texttt{BEINF0}(\mu, \sigma, \nu)$. The $\texttt{SSTlc}(\mu, \sigma, \nu, \tau)$ distribution has four parameters. Hence model \code{s0sst} can include models for parameters $\nu$ and $\tau$.

 

<<eval=FALSE, echo=FALSE>>=
s0sst <- gamlss( y0surv ~ pb(x), sigma.formula=~pb(x),
               family=SSTlc, n.cyc=100)

@

\subsection{Fitting a regression model on $(0,1]$ }
\label{Fitting a regression model on (0,1]}

To model the data used on the right top side of Figure \ref{fig:SIMULHIST}, we will use the same type of models as in the previous section, but this time inflated at one. The models are:
\begin{itemize}
  \item the \code{BEINF1} distribution using \code{gamlss()}
  \item  the \code{BEOI} distribution using \code{gamlss()}
  \item  the beta inflated  using \code{gamlssInf0to1()}
  \item  the inflated \code{logitSST} using \code{gamlssInf0to1()}
  \item  the inflated truncated \code{SST} using \code{gamlssInf0to1()}
  \item  Tobit \code{NO} using \code{gamlss()}
  \item  Tobit \code{SST} using \code{gamlss()}
\end{itemize}

<<cache=TRUE>>=
# BEINF1
g1p <- gamlss(y1~pb(x), sigma.fo=~pb(x), nu.fo=~pb(x), family=BEINF1)
# BEOI
g1p1 <- gamlss(y1~pb(x), sigma.fo=~pb(x), nu.fo=~pb(x), family=BEOI)
# BE inflated at 1
t1p <- gamlssInf0to1(y=y1, mu.fo=~pb(x), sigma.fo=~pb(x),
                       xi1.fo=~pb(x), trace=TRUE, family="BE")

# logitSST inflated at 1
gen.Family("SST", "logit")
t1sst <- gamlssInf0to1(y=y1, mu.fo=~pb(x), sigma.fo=~pb(x),
                  xi1.fo=~pb(x), family="logitSST", trace=T)
# truncated SST inflated at 1
# generate a truncated distribution from 0 to 1
library(gamlss.tr)
gen.trun(c(0,1),"SST",type="both")
# fit for starting values
m1 <-gamlss(y1~pb(x), sigma.fo=~pb(x), family=SST)
# fit model
t1ssttr <- gamlssInf0to1(y=y1, mu.fo=~pb(x), sigma.fo=~pb(x),
      xi1.fo=~pb(x), family="SSTtr",
      sigma.start=fitted(m1,"sigma"), trace=T)
@
Below we fit a Tobit model and a Tobit $\texttt{SSD}$ model, both right censored  at 1 to provide a point probability at 1. Since $0<Y\le 1$ it may be preferable to fit a Tobit model from a distribution on $(0,\infty)$ censored  at 1, for example example a $\texttt{BCCG}$ model, see \cite{Hossainetal2016}.
<<cache=TRUE>>=
# Tobit models
library(survival)
# creating the y variable as survival response
y1surv<- Surv(y1, y1!=1, type="right")
# creating the distributions
library(gamlss.cens)
gen.cens("SST", type="right")
gen.cens("NO", type="right")
# fitting the  models
# tobit model
s1no <- gamlss( y1surv ~ pb(x), sigma.formula=~pb(x),
               family=NOrc)
# generalised Tobit
s1sst <- gamlss( y1surv ~ pb(x), sigma.formula=~pb(x),
               family=SSTrc)
GAIC(g1p, g1p1, t1p, t1sst, t1ssttr, s1no, s1sst)
@
Note that two of the model have not converged  but those two will be no contestant  for the best model.


\subsection{Fitting a regression model on $[0,1]$ }
\label{Fitting a regression model on [0,1]}

 Here we  fit  four different models to the data shown  on the bottom of Figure \ref{fig:SIMULHIST}. The models are:
\begin{itemize}
   \item the \code{BEINF} distribution using \code{gamlss()}
   \item  the beta inflated at zero and one using \code{gamlssInf0to1()}
   \item  the inflated \code{logitSST} using \code{gamlssInf0to1()}
   \item  the inflated truncated (at zero and one) \code{SST} using \code{gamlssInf0to1()}
 \end{itemize}

<<cache=TRUE>>=
# BEINF using gamlss
g01p <- gamlss(y01~pb(x), sigma.fo=~pb(x), nu.fo=~pb(x), tau.fo=~pb(x),
              family=BEINF)
# Beta inflated using gamlssInf0to1
t01p <- gamlssInf0to1(y=y01, mu.fo=~pb(x), sigma.fo=~pb(x),
              xi0.fo=~pb(x),   xi1.fo=~pb(x),  trace=TRUE, family="BE")

# logistic SST using gamlssInf0to1
gen.Family("SST", "logit")
t01sst <- gamlssInf0to1(y=y01, mu.fo=~pb(x), sigma.fo=~pb(x),
           xi0.fo=~pb(x), xi1.fo=~pb(x), family="logitSST", trace=TRUE)
# generate a truncated distribution from 0 to 1
m1 <-gamlss(y1~pb(x), sigma.fo=~pb(x), family=SST, trace=FALSE)
gen.trun(c(0,1),"SST",type="both")
t01ssttr <- gamlssInf0to1(y=y1, mu.fo=~pb(x), sigma.fo=~pb(x),
       xi0.fo=~pb(x),xi1.fo=~pb(x), family="SSTtr",  trace=TRUE,
       sigma.start=fitted(m1,"sigma"))

AIC(g01p, t01p, t01sst, t01ssttr)
@
Surprisingly the truncated \code{SST} distribution is doing well for this data set.

\section{Conclusions}

GAMLSS  is a framework where different models can be fitted  and compared.  In this vignette, we have shown how models  with response variable restricted to values from zero to one (including 0 and/or 1) can be fitted within the GALMSS framework.

The \code{gamlssInf0to1()}  function can be used to fit a  variety  of different models in  which  the response variable  lies between zero and one including zero and/or one.  The function allows any continuous distribution on interval $(0,1)$, available in the \pkg{gamlss} packages, to be inflated with point probabilities at 0 and/or 1. The continuous distribution on $(0,1)$ can be a distribution that exists already within \code{gamlss.dist}, or  it can be created using the \code{gen.Family()} or \code{gen.trun()}  functions for transformed or truncated distribution, respectively. In addition function \code{gen.Inf0to1()} generates \code{d}, \code{p},  \code{q},  \code{r} and plot functions for a distribution defined between 0 and 1, inflated with point probability at 0 and/or 1.


More information about GAMLSS can be found in \cite{Stasinopoulosetal2017} or the GAMLSS website \url{www.gamlss.org}.  We're hoping that the \pkg{gamlss.inf}  package will be useful.


\bibliographystyle{plainnat}   
\bibliography{vignettes-2017}

\printindex

\end{document}
